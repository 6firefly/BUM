Basic User Management (BUM) module aims to be a simple and easy to use module, but in the same time a powerful one in managing users.
The module does not intend to "reinvent the wheel", so whenever a task not related with user management is needed, it make use of other great modules (like yii-mail and/or RBAM).
This module has a simple and intuitive administration panel and response to basic user administration needs. Enjoy it.

Feedback is welcomed. :)

1.)  The sql script required for this module must be installed separately!
Create a database, then run the sql scripts.
The sql script can be found in:
   bum/install/install.MySQL.sql - for MySQL server
     or in
   bum/install/install.postgre.sql - for PostgreSQL server

If you want to use this module with MySQL, InnoDB engine must be enabled. The sql scripts make use of triggers, and relational tables.

Do not forget to connect the application to the database!
Example of how to connect to the database:

    for MySQL:

    'db'=>array(
        'tablePrefix'=>'',
        'connectionString' => 'mysql:host=localhost;dbname=myDatabase',
        'username' => 'root',
        'password' => 'password',
        'charset' => 'utf8',
    ),

    for PostgreSQL:

    'db'=>array(
            'tablePrefix'=>'',
            'connectionString' => 'pgsql:host=localhost;port=5432;dbname=myDatabase',
            'username'=>'username',
            'password'=>'password',
            'charset'=>'UTF8',
    ),



2.) This module uses the default authorizing manage (CDbAuthManager) the default auth manager sql script can be found in: framework/web/auth/schema-mysql.sql for MySQL or in framework/web/auth/schema-pgsql.sql for Postgresql.

Do not forget to configure the CDbAuthManager. 

3.) This module uses the yii-mail module order to sent confirmation email to the users. So please download and install this module also. 

4.)  The following configurations must be apply in order for the module to work properly:

    // autoloading model and component classes
    'import'=>array(
        ...
        'ext.yii-mail.YiiMailMessage', // module yii-mail is required in order to sent confirmation email to the users

        'application.modules.bum.models.*',
        'application.modules.bum.components.*',
    ),
    ...
    'modules'=>array(
        ...
        // Basic User Management module;
        'bum' => array(
            // needs yii-mail extension..
            // 
            'install'=>true, // true just for installation mode, on develop or production mode should be set to false
        ),
        ...
    );
    ...
    // application components
    'components'=>array(
        ...
        'user'=>array(
            ...
            'class' => 'BumWebUser',
            'loginUrl' => array('//bum/users/login'), // required
            ...
        ),

        ...
        'authManager'=>array(
            'class'=>'CDbAuthManager',
            'connectionID'=>'db',
        ),
        ...
        // required by bum module
        'mail' => array(
            'class' => 'ext.yii-mail.YiiMail', //  module yii-mail is required in order to sent confirmation emails to the users
            'transportType' => 'php',
            'viewPath' => 'bum.views.mail',
            'logging' => false,
            'dryRun' => false,
        ),
        ...
    ),


5.)  Here is an example of how to include BUM module into your main menu protected/views/layouts/main.php:

    <?php $this->widget('zii.widgets.CMenu',array(
        'items'=>array(
            ...
            array('label'=>'My Profile', 'url'=>array('/bum/users/viewProfile', 'id'=>Yii::app()->user->id), 'visible'=>!Yii::app()->user->isGuest),
            ...
            array('label'=>'Login', 'url'=>array('/bum/users/login'), 'visible'=>Yii::app()->user->isGuest),
            array('label'=>'SingUp', 'url'=>array('/bum/users/signUp'), 'visible'=>Yii::app()->user->isGuest),
            array('label'=>'Logout ('.Yii::app()->user->name.')', 'url'=>array('/site/logout'), 'visible'=>!Yii::app()->user->isGuest),
        ),
    )); ?>

                

6.)  If you want to use RBAM module with this module then RBAM module needs the following setups:

    'modules'=>array(
        'rbam'=>array(
            // RBAM Configuration
            'userClass'=>'Users', // BUM user class
            'userNameAttribute'=>'user_name', // BUM default user name attribute
        ),
    ),

OBSERVATIONS: In order to make module RBAM to work with PostgreSQL the following table names should be changed:

    AuthAssignment to auth_assignment
    AuthItemChild to auth_item_child
    AuthItem to auth_item

and authManager array should be initialized like:

    'authManager'=>array(
        'class'=>'CDbAuthManager',
        'connectionID'=>'db',
        'itemTable'=>'auth_item',
        'itemChildTable'=>'auth_item_child',
        'assignmentTable'=>'auth_item_child',
    ),


                

7.)  In order for this module to function properly the following role/tasks/operations should be created:

    SuperAdmin role
        manageUsers task
            users_admin operation
            users_create operation
            users_delete operation
            users_all_view operation
            users_profile_update operation Update other users profile...
            users_all_privateProfile_view operation View other users private profile...
        emails_manage task
            emails_create operation
            emails_delete operation
            emails_all_view operation
            emails_verificationLink_resend operation
        settings_manage task


Go to install page of this module (index.php?r=bum/install) in order to automatically create this roles.

8.)  Also tow default users can be created once that module is installed:

Go to install page of this module (index.php?r=bum/install) in order to automatically create the default users 